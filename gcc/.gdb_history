continue
c
print ulNumSubChans 
step
print psuMsg->ulBytesRead 
print psuMsg->ulDataLen 
step
watch ulBytesRead
watch psuMsg->ulBytesRead
info breakpoints
delete breakpoints 1
info breakpoints
continue
print psuMsg->ulBytesRead 
print aulSubChanSampFactor[iSubChanIdx]
print aulSubChanSampFactor[0]
print aulSubChanSampFactor[1]
quit
set args ../../HF_data/17-DualB_take2.ch10 biz.biz -v
run
set args ../../HF_data/17-DualB_take2.ch10 biz.biz -T
run
quit
set args ../../HF_data/17-DualB_take2.ch10 biz.biz -T
run
quit
set args ../../HF_data/17-DualB_take2.ch10 biz.biz -T
run
set args ../../HF_data/17-DualB_take2.ch10 biz.biz -T
run
quit
set args ../../HF_data/16-DualAX1LH.ch10 biz.biz -T
run
set args ../../HF_data/16-DualAX1LH.ch10 biz.biz
run
print psuMsg
print psuMsg->psuAttributes 
print psuMsg->psuAttributes->apsuSubChan
print psuMsg->psuAttributes->apsuSubChan[iSubChanIdx]
print iSubChanIdx 
quit
set args ../../HF_data/16-DualAX1LH.ch10 biz.biz
run
set args ../../HF_data/16-DualAX1LH.ch10 biz.biz >> bidness
run
quit
run
set args ../../HF_data/16-DualAX1LH.ch10 biz.biz >> bidness
run
quit
set args ../../HF_data/16-DualAX1LH.ch10 biz.biz
break DecodeBuff_AnalogF1 
run
print psuMsg->ulDataLen 
print psuMsg->ulBytesRead 
step
print ulNumSubChans 
step
print psuMsg->ulDataLen
print psuMsg->ulBytesRead 
print psuCurrSubChan->psuChanSpec->uLength
print psuCurrSubChan->psuChanSpec->uLength/8
continue
print psuMsg->ulBytesRead 
quit
quit
set args ../../HF_data/17-DualB_take2 biz.biz -T
run
set args ../../HF_data/17-DualB_take2 biz.biz
break enI106_Decode_FirstAnalogF1 
run
set args ../../HF_data/17-DualB_take2.ch10 biz.biz
run
print psuMsg->psuChanSpec->bSame 
print psuMsg->psuChanSpec->uFactor 
print psuMsg->psuChanSpec->uLength 
print psuMsg->psuChanSpec->uMode 
print psuMsg->psuChanSpec->uSubChan 
print psuMsg->psuChanSpec->uTotChan 
print psuMsg->ulBytesRead 
print psuMsg->ulDataLen 
step
print psuHeader->uChID 
print psuHeader->ubyDataType 
print psuHeader->ulPacketLen 
print psuHeader->ulDataLen 
step
print ANALOG_PACKED 
step
step
step
print iSubChanIdx 
print psuAttributes->apsuSubChan[iSubChanIdx]->psuChanSpec->uMode
psuMsg->psuChanSpec[iSubChanIdx].uMode
print psuMsg->psuChanSpec[iSubChanIdx].uMode
step
print psuAttributes->apsuSubChan[iSubChanIdx]->psuChanSpec->uLengt
print psuMsg->psuChanSpec[iSubChanIdx].uLength
step
print psuAttributes->apsuSubChan[iSubChanIdx]->psuChanSpec->uTotChan
print psuMsg->psuChanSpec[iSubChanIdx].uSubChan
quit
set args ../../HF_data/17-DualB_take2.ch10 biz.biz -T
break PrintChanAttributes_PcmF1 
start
list
continue
step
quit
set args 2015_ch10_files/49003_Dartmouth--1A-ELF_VF--7-30-2015_058.ch10 1A-ELF_VF--idmpanalog.out
start
stepi
start
step
show args
set args 2015_ch10_files/49003_Dartmouth--1A-ELF_VF--7-30-2015_058.ch10 1A-ELF_VF--idmpanalog.out -T
start
run
set args 2015_ch10_files/49003_Dartmouth--1A-ELF_VF--7-30-2015_058.ch10 1A-ELF_VF--idmpanalog.out
break i106_decode_analogf1.c:186
run
p isubchanidx
step
p isubchanidx
iSubChanIdx
p iSubChanIdx
s
p uTotChan
p iSubChanIdx
s
s
si
step
p psuMsg->ulDataLen
step
p ANALOG_PACKED
p psuAttributes->iAnalogChansPerPkt
p psuAttributes->iAnalogChansPerPkt
step
p uTotChan
step
p psuMsg->psuChanSpec->bSame
p bFALSE
step
p uTotChan
step
p psuMsg->ulBytesRead
p sizeof(SuAnalogF1_ChanSpec)
p psuAttributes->iAnalogChansPerPkt
step
p psuCurrSubChan->psuChanSpec->uLength
p psuMsg->ulBytesRead
p psuMsg->ulDataLen
step
p aulSubChanSampFactor[iSubChanIdx]
p iSubChanIdx
p iMaxSimulSamps
p iSimulSamp
quit
set args 2015_ch10_files/49003_Dartmouth--1A-ELF_VF--7-30-2015_058.ch10 1A-ELF_VF--idmpanalog.out
exit
quit
set args 2015_ch10_files/49003_Dartmouth--1A-ELF_VF--7-30-2015_058.ch10 biz.biz -c 6
run
step
p iHdrIdx
step
p iHdrIdx
p HEADER_SIZE
quit
set args 2015_ch10_files/49003_Dartmouth--1A-ELF_VF--7-30-2015_058.ch10 biz.txt -T
quit
quit
help commands
145complete help co
$foo++
end
p $foo
end
$foo++
p $foo
end
set $foo++
silent
continue
end
silent
set $foo++
194complete p psu
set $foo++
p $foo
silent
continue
end
silent
set $foo++
p $foo
continue
end
silent
        set $foo++
end
silent
set $foo++
p $foo
p psuMsg->psuAttributes->iRecordNum
continue
end
set $brokeback = 1
end
set $brokeback = 1
printf "$foo = %li\n", $foo
printf "$brokeback = %li\n", $brokeback
end
silent
set $foo++
printf "$foo = %li\n", $foo
printf "iRecordNum = %li\n", psuMsg->psuAttributes->iRecordNum
continue
end
        silent
        set $foo++
        printf "$foo = %li\n", $foo
        printf "iRecordNum = %li\n", psuMsg->psuAttributes->iRecordNum
        set $brokeback = 0
continue
end
61complete set $br
set $brokeback = 1
printf "$foo = %li\n", $foo
        printf "$brokeback = %li\n", $brokebac
end
set $brokeback = 1
printf "$foo = %li\n", $foo
        printf "$brokeback = %li\n", $brokeback
end
        silent
        set $foo++
        printf "$foo = %li\n", $foo
        printf "iRecordNum = %li\n", psuMsg->psuAttributes->iRecordNum
        set $brokeback = 0
        printf "psuAttributes: "
p *psuMsg->psuAttributes
printf "psuMsg: "
p *psuMsg
continue
end
silent
printf "Got a sync word!"
printf "nSyncs: %li\n", $nSyncs
continue
end
        silent
        printf "Got a sync word!"
        printf "nSyncs: %li\n", $nSyncs
end
